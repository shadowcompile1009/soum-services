import mongoose from 'mongoose';
import { DisputeData } from '../enums/dispute.enum';
import { OrderType } from '../enums/order.enum';
import { PaymentProviderType, PayoutType } from '../enums/payment.enum';
import { FinanceReasoningForPendingPayout } from '../enums/status.enum';
import { UserData } from './user.interface';

export interface OrderDocument {
  orderId: mongoose.Types.ObjectId;
  statusId?: mongoose.Types.ObjectId;
  disputeStatusId?: mongoose.Types.ObjectId;
  refundStatusId?: mongoose.Types.ObjectId;
  payoutStatusId?: mongoose.Types.ObjectId;
  statusName?: string;
  trackingNumber?: string;
  reverseSMSATrackingNumber?: string;
  pickUpTrackingNumber?: string;
  pickUpAddOnsTrackingNumber?: string;
  paymentType?: PaymentProviderType;
  captureStatus?: string;
  payoutStatus?: string;
  refundStatus?: string;
  disputeStatus?: string;
  createdAt?: Date;
  updatedAt?: Date;
  date?: Date;
  orderData?: OrderData;
  disputeData?: DisputeData;
  userData?: UserData;
  isAirTableSynched?: boolean;
  sendOutBoundMessage?: boolean;
  confirmationDeadline?: Date;
  payoutType?: PayoutType;
  serviceId?: string;
  vendorId?: string;
  logistic?: string;
  isAvailableToPickup?: boolean;
  isProductRelisted?: boolean;
  isRiyadhSpecificPickup?: boolean;
  lastMileTrackingNumber?: string;
  postInspectionTrackingNumber?: string;
}

export interface OrderData {
  financingFee?: number;
  conditionId?: string;
  productId: string;
  productName: string;
  inventoryId?: string;
  orderId?: string;
  trackingNumber?: string;
  reverseSMSATrackingNumber?: string;
  pickUpTrackingNumber?: string;
  orderType: OrderType;
  orderStatus: string;
  orderNumber: string;
  sellerPhone?: string;
  buyerPhone?: string;
  sellerCity?: string;
  buyerCity?: string;
  buyerName?: string;
  sellerName?: string;
  buyerPostalCode?: string;
  sellerPostalCode?: string;
  buyerAddress?: string;
  sellerAddress?: string;
  buyerStreet?: string;
  sellerStreet?: string;
  sellerSecretKey?: string;
  buyerDistrict?: string;
  sellerDistrict?: string;
  buyerPromoCode?: string;
  sellerPromoCode?: string;
  sellerBankName?: string;
  sellerAcountName?: string;
  sellerBankBIC?: string;
  sellerIBAN?: string;
  sellerType?: string;
  grandTotal: string;
  payoutAmount: string;
  sellPrice: string;
  shippingAmount?: string;
  commissionAmount?: string;
  vatAmount?: string;
  paymentStatus: string;
  paymentType: PaymentProviderType;
  createdAt: Date;
  varient?: string;
  productPictures?: string;
  sellerPromo?: any;
  buyerPromo?: any;
  sendOutBoundMessage?: boolean;
  sellerId?: string;
  buyerId?: string;
  deliveryFee?: number;
  productVarient?: string;
  questionsAndAnswers?: string;
  isKeySeller?: boolean;
  availableLogisticsServices?: string;
  modelId?: string;
  modelName?: string;
  categoryName?: string;
  brandName?: string;
  categoryId?: string;
  conditions?: any;
  grade?: string;
  productCondition?: string;
  price_quality_extra_commission?: number;
  transactionDetails?: string;
  captureStatus?: string;
  vatPercentage?: number;
  buyType?: string;
  dmoId?: string;
  variantId?: string;
  productNameAr?: string;
  confirmationDate?: Date;
  disputeDate?: Date;
  deliveryDate?: Date;
  listingGroupId?: string;
  shippingDate?: Date;
  returnWarranty?: string;
  addOnsSummary?: any;
  addOnsTotalAmount?: number;
  addOnsGrandTotal?: number;
  addOnsVat?: number;
  addOns?: string;
  addOnsValidity?: string;
  addOnsDescription?: string;
  paidAmount?: number;
  reservationAmount?: number;
  remainingAmount?: number;
  isReservation?: boolean;
  refundAmount?: number;
  isQuickPayout?: boolean;
  penalty?: number;
  isFinancing?: boolean;
  cancellationFee?: number;
  isUAEListing?: boolean;
  lastMileTrackingNumber?: string;
  postInspectionTrackingNumber?: string;
  productDescription?: string;
  replacedProductId?: string;
  replacedOrderId?: string;
  productImgs?: string[];
  failedInspectionLabel?: string;
  failedInspectionFlag?: boolean;
  canGenerateTrackingNumber?: boolean;
  isRequestRefundEnabled?: boolean;
  isRequestPayoutEnabled?: boolean;
  payoutPendingReason?: FinanceReasoningForPendingPayout;
  dmoNCTReason?: any; // marking it as any as will create interface after nct reasons migration
  isConsignment?: boolean;
}
