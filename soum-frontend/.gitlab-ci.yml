stages:
  - build
  - deploy
  - build-prod
  - deploy-prod

build:
# Official docker image.
 image: docker:latest
 stage: build
 services:
  - docker:dind
 before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
 script:
  - docker build --pull -t "$CI_REGISTRY_IMAGE" --build-arg projectname=soum --build-arg environment=test .
  - docker push "$CI_REGISTRY_IMAGE"
 when: manual
 allow_failure: false

deploy:
  stage: deploy
  image: dtzar/helm-kubectl
  before_script:
    - kubectl config view
  script:
    - echo $KUBE_NAMESPACE
    - cat registry-credentials.yml | sed "s#{{KUBE_NAMESPACE}}#$KUBE_NAMESPACE#g" | kubectl apply -f -
    - cat deployment.yaml | sed "s#{{CI_REGISTRY_IMAGE}}#$CI_REGISTRY_IMAGE#g" | sed "s#{{project-name}}#soum-frontend#g" |kubectl apply -f -
    - cat kubernetes-ingress.yaml | sed "s#{{project-name}}#soum-frontend#g" |kubectl apply -f -
    - kubectl rollout restart deployment/soum-frontend
  environment:
    name: dev 
  when: on_success

build-prod:
# Official docker image.
 image: docker:latest
 stage: build-prod
 services:
  - docker:dind
 before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
 script:
  - docker build --pull -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA --build-arg projectname=soum --build-arg environment=prod .
  - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
 when: manual
 allow_failure: false

deploy-prod:
  stage: deploy-prod
  image: dtzar/helm-kubectl
  before_script:
    - kubectl config view
  script:
    - echo $KUBE_NAMESPACE
    - cat registry-credentials.yml | sed "s#{{KUBE_NAMESPACE}}#$KUBE_NAMESPACE#g" | kubectl apply -f -
    - cat deployment-prod.yaml | sed "s#{{CI_REGISTRY_IMAGE}}#$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA#g" | sed "s#{{project-name}}#soum-frontend-prod#g" |kubectl apply -f -
    - cat kubernetes-ingress-prod.yaml | sed "s#{{project-name}}#soum-frontend-prod#g" |kubectl apply -f -
    - kubectl rollout restart deployment/soum-frontend-prod
  environment:
    name: prod 
  when: on_success
