/v1/brand/:
  get:
    tags:
      - Brand
    summary: Get all brand information
    description: Get all brand information
    operationId: getAllBrand

    parameters: []
    responses:
      "200":
        description: successful operation
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GetBrandsResponse"
            examples:
              successExample:
                $ref: "#/components/examples/v1GetBrandsResponse"
  post:
    tags:
      - Brand
    summary: Create new brand with basic information
    description: Create new brand with basic information
    operationId: postCreateBrand

    parameters: []
    requestBody:
      content:
        multipart/form-data:
          schema:
            $ref: "#/components/definitions/Brand"
    responses:
      "200":
        description: successful operation
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1PostBrandResponse"
            examples:
              successExample:
                $ref: "#/components/examples/v1PostBrandResponse"
/v1/brand/{brandId}/accessory:
  post:
    tags:
      - Brand
    summary: Create new brand accessory
    description: Create new brand accessory
    operationId: createBrandAccessory
    parameters:
       - in: header
         name: token
         required: true
         schema:
           type: string
           example: >-
             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMmRkYjE2MDg5ZDc1MjhkM2E2ZmEyMiIsImlhdCI6MTYzMTAwNzM4NSwiZXhwIjoxNjMzNTk5Mzg1fQ.5byciTrTEgINRZmJFfVJew_btr6kphN9qEiOWeyeM1U
       - in: path
         name: brandId
         description: Specific brandId
         required: true
         schema:
           type: string
           example: 6063f95f929f926b67347b0d
    requestBody:
      content:
        multipart/form-data:
          schema:
            $ref: "#/components/definitions/BrandAccessory"
    responses:
      "200":
        description: successful operation
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1PostBrandResponse"
            examples:
              successExample:
                $ref: "#/components/examples/v1PostBrandResponse"
/v1/brand/accessories/brands:
  get:
    tags:
      - Brand
    summary: Get brand accessories
    description: Get brand accessories
    operationId: getBrandAccessories   
    parameters:
      - in: query
        name: brandId
        description: "fetches accessories by brandId"
        required: false
        schema:
          type: string
          example: "606b52ac9537c0c024d3baa1"
      - in: query
        name: productId
        description: "fetches accessories by productId"
        required: false
        schema:
          type: string
          example: "62e133b0e3b8df0037a5d177"
    responses:
      "200":
        description: successful operation
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GetAccessoriesResponse"
            examples:
              successExample:
                $ref: "#/components/examples/v1GetAccessoriesResponse"
/v1/brand/{accessoryId}/accessory:
  delete:
    tags:
      - Brand
    summary: Delete accessory
    description: Delete accessory
    operationId: deleteAccessory
    parameters:
       - in: header
         name: token
         required: true
         schema:
           type: string
           example: >-
             eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxMmRkYjE2MDg5ZDc1MjhkM2E2ZmEyMiIsImlhdCI6MTYzMTAwNzM4NSwiZXhwIjoxNjMzNTk5Mzg1fQ.5byciTrTEgINRZmJFfVJew_btr6kphN9qEiOWeyeM1U
       - in: path
         name: accessoryId
         description: Specific accessoryId
         required: true
         schema:
           type: string
           example: 6063f95f929f926b67347b0d
    responses:
      "200":
        description: successful operation
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1PutCategoryResponse"
            examples:
              successExample:
                $ref: "#/components/examples/v1PutCategoryResponse"

/v1/brand/brands:
  get:
    tags:
      - Brand
    summary: Get all brands
    description: Get all brands
    operationId: getAllBrands

    responses:
      "200":
        description: successful operation
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GetAllBrandsResponse"
            examples:
              example:
                $ref: "#/components/examples/v1GetAllBrandsResponse"
      "400":
         description: Fail to get all brands
         content:
           application/json:
             examples:
               example:
                 $ref: '#/components/examples/v1FailedToGetAllBrands'
/v1/brand/{brandId}:
  get:
    tags:
      - Brand
    summary: Get brand with id
    description: Get brand with id
    operationId: getBrand

    parameters:
      - in: path
        name: brandId
        description: Brand Id
        required: true
        schema:
          type: string
          example: 60640602929f92968a347b12
    responses:
      "200":
        description: successful operation
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GetBrandResponse"
            examples:
              successExample:
                $ref: "#/components/examples/v1GetBrandResponse"
  put:
    tags:
      - Brand
    summary: Update brand with specific information
    description: Update brand with specific information
    operationId: putUpdateBrand

    parameters:
      - in: path
        name: brandId
        description: Specific brand id
        required: true
        schema:
          type: string
          example: 60640602929f92968a347b12
    requestBody:
      content:
        multipart/form-data:
          schema:
            $ref: "#/components/definitions/Brand"
    responses:
      "200":
        description: successful operation
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1PutBrandResponse"
            examples:
              successExample:
                $ref: "#/components/examples/v1PutBrandResponse"
/v1/brand/category/{categoryId}:
  get:
    tags:
      - Brand
    summary: Get all brand linked with category
    description: Get all brand linked with category
    operationId: getListBrand

    parameters:
      - in: path
        name: categoryId
        description: Category Id linked
        required: true
        schema:
          type: string
          example: 6063f95f929f926b67347b0d
    responses:
      "200":
        description: successful operation
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v1GetBrandsResponse"
            examples:
              successExample:
                $ref: "#/components/examples/v1GetBrandsResponse"

